{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil Calibri;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;\red247\green150\blue70;\red143\green176\blue140;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\ul\b\f0\fs22\lang9 Be\'e1gyazott eszk\'f6z\'f6k programoz\'e1sa ZH.\par

\pard\sa200\sl276\slmult1\ulnone Soft AP mode (hozz\'e1f\'e9r\'e9si pontk\'e9nt)\par
\b0 #include <ESP8266WiFi.h>\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 SoftAP m\'f3d ind\'edt\'e1shoz: WiFi.softAP(ssid, password, channel, hidden, max_connection)\line ssid:string\line password:legal\'e1bb 8 karakter (ha \'fcres akkor publikus)\line channel:1-13 alap\'e9rtelmezetten 1\line hidden:ssid elrejt\'e9se (true/false)\line max connection:0-8, alap\'e9rtelmezetten 4 (max 5 kliens csatlakozhat)\ul\b\par
{\pntext\f3\'B7\tab}\ulnone\b0  Wifi.softAPConfig(local_ip, gateway, subnet)\ul\b\line\ulnone\b0 local_ip:eszk\'f6z ip c\'edme\ul\b\line\ulnone\b0 gateway:alap\'e9rtelmezett \'e1tj\'e1r\'f3\ul\b\line\ulnone\b0 subnet:alh\'e1l\'f3zati maszk\ul\b\line\ulnone\b0 visszat\'e9r\'e9si \'e9rt\'e9ke a be\'e1ll\'edt\'e1sr\'f3l true/false\ul\b\par

\pard\sa200\sl276\slmult1\ulnone EEPROM (valamilyen adat elt\'e1rol\'e1sa/el\f1\'f5\f0 h\'edv\'e1sa EEPROM mem\'f3ri\'e1b\'f3l)\par
\b0 #define EEPROM_SIZE 4096 \tab\tab //4kB\line #define EEPROM_WATERMARK 197\tab //8bit \'e9rt\'e9k. [0,255]\line #define EEPROM_LOC_WM 0\tab\tab //v\'edzjel helye az EEPROM-ba\line #define EEPROM_DATA\tab  4\tab\tab //adat helye\line void setup()-ba : init_EEPROM();\line void init_EEPROM()\{\line int wm, data;\line EEPROM.begin(EEPROM_SIZE);\line wm = EEPROM.read(EEPROM_LOC_WM);\line if(EEPROM_WATERMARK != wm) \line\{\line //els\f1\'f5\f0  inicializ\'e1l\'e1s\line EEPROM.write(EEPROM_LOC_WM, EEPROM_WATERMARK);\line data=42;\line EEPROM.put(EEPROM_LOC_DATA, data);\line EEPROM.commit();\line\}\line else()\line\{\line //ha m\'e1r inicializ\'e1lva van(haszn\'e1lva van a v\'edzjel/nem az els\f1\'f5\f0  haszn\'e1lat)\line EEPROM.get(EEPROM_LOC_DATA, data);\line Serial.printf("DATA was: %d\\n", data);\line\}\line\b Nyers (RAW) string liter\'e1l\b0\par
Elt\'e1rolhat\'f3 vele nyers sz\'f6veg. R karakterrel kell jel\'f6lni, illetve valamilyen nyit\'f3, z\'e1r\'f3 karaktersorozatal. \par
P\'e9ld\'e1ul:\line  String raw_html = \b\i R"(\b0\i0\line <div class="city">\line <h2>London</h2>\line </div>\line\b\i )"\b0\i0 ;\par
\b PROGMEM\par
\b0 Haszn\'e1lat\'e1val a v\'e1ltoz\'f3t a programmem\'f3ri\'e1ba tudjuk bet\'f6lteni.\line (Vagy glob\'e1lis v\'e1ltoz\'f3, vagy statikus.)\line  const \b PROGMEM \b0 dataType variableName[] = \{\};\par
\b F() MACRO\par
\b0 Debugol\'e1sn\'e1l hasznos lehet, ha nem az SRAM-ban t\'e1rolunk adatot, hanem a programmem\'f3ri\'e1ban.\line Serial.print(\b F(\b0 "Ez egy debug \'fczenet a fejleszt\f1\'f5 sz\f0\'e1m\'e1ra")\b )\b0 ;\par
\b STA m\'f3d\par
\b0 L\'e9tez\f1\'f5\f0  WiFi h\'e1l\'f3zathoz tudunk kapcsol\'f3dni a seg\'edts\'e9g\'e9vel.\par
\b Fetch() - Promise\par
\b0 A Promise egy JS objektum, aszinkron m\f1\'fb\f0 velet \'e1llapot\'e1t, eredm\'e9ny\'e9t kezeli.\line H\'e1rom \'e1llapota lehet(pending,fulfilled,rejected)\line Ide tartozik az async/await alkalmaz\'e1sa\par
\b SPIFF\par
\b0 Flash mem\'f3ria, lehet\f1\'f5\f0 s\'e9g van a firmware mellett f\'e1jlrendszer kialak\'edt\'e1s\'e1ra is.\line F\'e1jlnevek max 31 karakterb\f1\'f5\f0 l \'e1llhatnak, az utols\'f3 karakternek '\\0' kell lennie.\line (Fontos:El\'e9r\'e9si \'fat eset\'e9n is \'e9rv\'e9nyes a max. 31 karakter!)\line Spiff f\'fcggv\'e9nyek: \par
SPIFFS.begin() \f2\endash  f\f0\'e1jlrendszer csatol\'e1sa\line\f2 SPIFFS.end() \endash  f\f0\'e1jlrendszer lev\'e1laszt\'e1sa\line\f2 SPIFFS.format() \endash  f\f0\'e1jlrendszer form\'e1z\'e1sa, siker eset\'e9n a visszat\'e9r\'e9si \'e9rt\'e9k \'84true\f2\rdblquote ;\f0\line\f2  SPIFFS.info(FSinfo info) \endash  f\f0\'e1jlrendszer tulajdons\'e1gainak a lek\'e9r\'e9se\f2\line File f = SPIFFS.open(path, mode) \endash  f\f0\'e1jl megnyit\'e1sa (mode: r \f2\endash  read, w write, a- append)\b\f0\line\b0 Dir dir = SPIFFS.openDir(\'84/\f2\rdblquote ); - gy\f0\'f6k\'e9rk\'f6nyvt\'e1r megnyit\'e1sa! \par
\ul ESP8266 Filesystem Uploader\ulnone\line {\f2{\field{\*\fldinst{HYPERLINK https://github.com/esp8266/arduino-esp8266fs-plugin/releases }}{\fldrslt{https://github.com/esp8266/arduino-esp8266fs-plugin/releases\ul0\cf0}}}}\f2\fs22\line\f0\lang2057 Kicsomagolod, majd Documents/Programs/arduion-1.8.9/tools (ha ezt a verzi\'f3t haszn\'e1ljuk)\line Majd \'fajra kell ind\'edtani, Tools men\'fcben ESP8266 Sketch Data Upload.\line Ennek a seg\'edts\'e9g\'e9vel lehet adatokat menteni, HTML, CSS f\'e1jlokat, m\'e9di\'e1t t\'e1rolni.\line Haszn\'e1lata: elmentj\'fck az Arduino Sketchet(adott projekt), a mapp\'e1j\'e1ban a .ino f\'e1jl mell\'e9 l\'e9trehozunk egy data mapp\'e1t, az ebbe elhelyezett f\'e1jlokat tudjuk felt\'f6lteni.\par

\pard\sa200\sl276\slmult1\qc\ul\b\i\fs28 SPIFF P\'c9LDA FELADAT\par
\ulnone\i0\fs22 script.js\par

\pard\sa200\sl276\slmult1\cf2\b0 async function setLed(state) \{\line try \{\line const response = await fetch("/led", \{\line method: "POST",\line headers: \{ "Content-Type":  "application/x-www-form-urlencoded"\},\line body: `state=$\{state\}`\line\});\line if (!response.ok) \{\line throw new Error(`Hiba: $\{response.status\} - $\{response.statusText\}`);\line\}\line const data = await response.text();\line console.log("Szerver v\'e1lasza:",data);\line\} catch(error)\{\line console.error("Hiba t\'f6rt\'e9nt:", error);\par

\pard\sa200\sl276\slmult1\qc\cf0\b style.css\par
\cf3\b0 body \{\line /*ide ker\'fcl a form\'e1z\'e1s*/\line\}\line\cf2\line\cf0\b index.html\lang9\par

\pard\sa200\sl276\slmult1\b0 html nyit\'f3tag, stb (gener\'e1lod, ha pl. VSCode-ot haszn\'e1lsz, vagy valamilyen szerkeszt\f1\'f5\f0 t)\line majd\line <body>\line <button onclick="setLed('on')">LED BE </button>\line <button onclick="setLed('off')">LED KI </button>\line </body>\par

\pard\sa200\sl276\slmult1\qc\b .ino f\'e1jl ( Arduino)\par

\pard\sa200\sl276\slmult1\b0 #include <ESP8266WiFi.h>\line #include <ESPAsyncWebServer.h>\line #include <FS.h>\line\line const char* ssid = "BIR_WIFI";\line const char* password = "OeBir2019";\line AsyncWebServer server(80);\line\par
void handleLed (AsyncwebServerRequest* request) \{\line // Ha a param\'e9ter 'state' l\'e9tezik a bodyban \line if (request->hasParam("state", true)) \{\line String state= request->arg("state"); // LED vez\'e9rl\'e9s\line if (state == "on") \{\line\tab digitalWrite(LED_BUILTIN, LOW); // LED bekapcsol\'e1sa \} \line else if (state == "off") \{\line\tab digitalWrite(LED_BUILTIN, HIGH); // LED kikapcsol\'e1sa \line\}\line // V\'e1lasz k\'fcld\'e9se\line request->send (200, "text/plain", "LED \'e1llapot: + state); \line\} else \{\line\tab // Ha nincs 'state' param\'e9ter, hib\'e1t k\'fcld\'fcnk \line\tab request->send(400, "text/plain", "Hib\'e1s k\'e9r\'e9s");\line\}\line\}\line void notFound(AsyncWebServerRequest* request)\{\line String message = "Nem tal\'e1lhat\'f3";\line request -> send(404, "text/plain", message);\line\}\line void setup()\{\line Seria.begin(115200);\line while (!Serial)\{\line delay(100);\line\}\line pinMode(LED_BUILTIN, OUTPUT);\line Serial.println();\line WiFi.begin(ssid, password);\line while (WiFi.status() != WL_CONNECTED) \{\line delay(500);\line Serial.print(".");\line\}\line Serial.println("\\nCsatlakozva! IP: " +WiFi.localIP().toString());\line if (!SPIFFS.begin())\{\line Serial.println("SPIFFS inicializ\'e1l\'e1s sikertelen!");\line return;\line\}\line server.serveStatic("/", SPIFFS, "/").setDefaultFile("index.html");\line server.on("/led", HTTP_POST, handleLed);\line server.onNotFound(notFound);\line server.begin();\line\}\line void loop()\{\}\par

\pard\sa200\sl276\slmult1\qc\ul\b\i\fs28\lang2057 SOFT AP LED VEZ\'c9RL\'c9S P\'c9LDA FELADAT\ulnone\i0\fs22\lang9\par

\pard\sa200\sl276\slmult1\b0 #include <ESP8266WiFi.h>\line #include <ESP8266WebServer.h>\line String ssid = "SAJATWIFI";\line String pass ="jelszo1234";\line IPAddress local_ip(192,138,1,1);\line IPAddress gateway(192,138,1,1);\line IPAdress subnet(255,255,255,0);\line ESP8266WebServer server(80); //port be\'e1ll\'edt\'e1s\line #define LED1pin LED_BUILTIN\line bool LED1status = LOW;\line #define LED2pin D6\line bool LED1status = LOW;\line void setup()\{\line Serial.begin(115200);\line pinMode(LED1pin, OUTPUT);\line pinMode(LED2pin, OUTPUT);\line WiFi.softAP(ssid, password);\line WiFi.softAPConfig(local_ip, gateway, subnet);\line delay(100);\line server.on("/", handle_OnConnect);\line server.on("/led1on", handle_led1on);\line server.on("/led1off", handle_led1off);\line server.on("/led2on", handle_led2on);\line server.on("/led2off", handle_led2off);\line server.onNotFound(handle_NotFound);\line server.begin();\line Serial.println("HTTP server started");\line\}\line void loop()\{\line server.handleClient();\line if(LED1status)\line\{digitalWrite(LED1pin, HIGH);\}\line else\line\{digitalWrite(LED1pin, LOW);\}\line\line if(LED2status)\line\{digitalWrite(LED2pin, HIGH);\}\line else\line\{digitalWrite(LED2pin, LOW);\}\line\line void handle_OnConnect()\{\line LED1status=LOW;\line LED2status=LOW;\line server.send(200, "text/html", SendHTML(LED1status, LED2status));\line\}\line void handle_led1on()\{\line LED1status =HIGH;\line server.send(200,"text/html", SendHTML(true,LED1status));\line\}\line void handle_led1off()\{\line LED1status =LOW;\line server.send(200,"text/html", SendHTML(false,LED1status));\line\}\line void handle_led2on()\{\line LED2status =HIGH;\line server.send(200,"text/html", SendHTML(true,LED2status));\line\}\line void handle_led2off()\{\line LED2status =LOW;\line server.send(200,"text/html", SendHTML(false,LED2status));\line\}\line void handle_NotFound()\{\line server.send(404, "text/plain", "Not found")\line\}\par
Itt a html weboldalt m\'e9g string v\'e1ltoz\'f3ba hozzuk l\'e9tre az Arduino projektben, nem \'fagy mint az el\f1\'f5\f0 z\f1\'f5\f0  p\'e9ld\'e1ban, ahol k\'fcl\'f6n f\'e1jlokat kezelt\'fcnk.\line String SendHTML(uint8_t led1stat, uint8_t led2stat)\line\{\line String ptr = "<!DOCTYPE html><html>\\n";\line ptr +="<head>\\n";\line ptr +="<title>LED Control </title>\\n"\line ptr +="</head>\\n";\line if (led1stat)\{\line ptr += "<p>LED1 status: OFF </p>";\line ptr += "<a href=\\"/led1off\\"><button>OFF</button></a>\\n";\line\}\line else\{\line ptr += "<p> LED1 status:ON </p><a href=\\"/led1on\\">";\line ptr+= "<button>ON</button></a>\\n";\line\}\line if (led2stat)\{\line ptr += "<p>LED2 status: OFF </p>";\line ptr += "<a href=\\"/led2off\\"><button>OFF</button></a>\\n";\line\}\line else\{\line ptr += "<p> LED2 status:ON </p><a href=\\"/led2on\\">";\line ptr+= "<button>ON</button></a>\\n";\line\}\line ptr += "</body>\\n";\line ptr += "</html>\\n";\line return ptr;\line\}\line\line\line\line\line\par
\ul\b\par
\ulnone\b0\par
}
 